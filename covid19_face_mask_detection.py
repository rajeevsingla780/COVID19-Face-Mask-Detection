# -*- coding: utf-8 -*-
"""Covid19_Face_Mask_Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/180_VDMQWYatLNMdLp_nrlSPdXEfXnxt_
"""

import tensorflow 
from tensorflow.keras.layers import MaxPooling2D,Conv2D,Dense,Dropout,Flatten
from tensorflow.keras.models import Sequential
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.optimizers import Adam
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

import os

main_dir="/content/drive/MyDrive/Datasets/New Masks Dataset"
Test_dir=os.path.join(main_dir,'Test')
Train_dir=os.path.join(main_dir,'Train')
validation_dir=os.path.join(main_dir,'Validation')

Train_mask_dir=os.path.join(Train_dir,'Mask')
Train_nomask_dir=os.path.join(Train_dir,'Non Mask')

train_mask_names=os.listdir(Train_mask_dir)
print(train_mask_names[:10])
train_nomask_names=os.listdir(Train_nomask_dir)
print(train_nomask_names[:10])

import matplotlib.image as mpimg
nrows=4
ncols=4
plt.figure(figsize=(12,12))
mask_pic=[]
for i in train_mask_names[:8]:
  mask_pic.append(os.path.join(Train_mask_dir,i))
nomask_pic=[]
for i in train_nomask_names[:8]:
  nomask_pic.append(os.path.join(Train_nomask_dir,i))
merged_pic=mask_pic+nomask_pic

for i in range(0,len(merged_pic)):
  #title fetch krte hai image ka
  title_data=merged_pic[i].split('/')[-1]
  sp=plt.subplot(nrows,ncols,i+1)
  sp.axis('Off')
  image=mpimg.imread(merged_pic[i])
  sp.set_title(title_data,fontsize=10)
  plt.imshow(image,cmap='gray')

train_datagen=ImageDataGenerator(rescale=1./255,zoom_range=0.2,rotation_range=40,horizontal_flip=True)
test_datagen=ImageDataGenerator(rescale=1./255)
valid_datagen=ImageDataGenerator(rescale=1./255)

train_generator=train_datagen.flow_from_directory(Train_dir,target_size=(150,150),batch_size=32,class_mode='binary')
test_generator=test_datagen.flow_from_directory(Test_dir,target_size=(150,150),batch_size=32,class_mode='binary')
Valid_generator=valid_datagen.flow_from_directory(validation_dir,target_size=(150,150),batch_size=32,class_mode='binary')

train_generator.class_indices  #ye apne labels hai

train_generator.image_shape

model=Sequential()
model.add(Conv2D(32,kernel_size=(3,3),padding='SAME',activation='relu',input_shape=(150,150,3)))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.5))
model.add(Conv2D(64,kernel_size=(3,3),padding='SAME',activation='relu'))
model.add(MaxPooling2D(pool_size=(2,2)))
model.add(Dropout(0.5))
model.add(Flatten())
model.add(Dense(256,activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(1,activation='sigmoid'))
model.summary()

model.compile(Adam(lr=0.001),loss='binary_crossentropy',metrics=['accuracy'])

history=model.fit(train_generator,epochs=30,validation_data=Valid_generator)

history.history.keys()

plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.legend(['loss','validation_loss'])
plt.title('Loss and Validation_loss')
plt.xlabel('epoch')
plt.show()

plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.legend(['accuracy','validation_accuracy'])
plt.title('Accuracy and Validation_Accuracy')
plt.xlabel('epoch')
plt.show()

test_loss,test_accuracy=model.evaluate(test_generator)
print('test_loss{},test_accuracy{}'.format(test_loss,test_accuracy))

from google.colab import files
from tensorflow.keras.preprocessing import image
uploaded=files.upload()
for fname in uploaded.keys():
  Img_path='/content/'+fname
  img=image.load_img(Img_path,target_size=(150,150))
  images=image.img_to_array(img)
  images=np.expand_dims(images,axis=0)
  prediction=model.predict(images)
  print(fname)
  if(prediction==0):
    print('Mask')
  else:
    print('No Mask')

model.save('Covid19_face_mask_detection_model.h5')

